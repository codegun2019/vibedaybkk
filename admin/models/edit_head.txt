<?php
/**
 * VIBEDAYBKK Admin - Edit Model
 * เนเธเนเนเธเธเนเธญเธกเธนเธฅเนเธกเน€เธ”เธฅ
 */

define('VIBEDAYBKK_ADMIN', true);
require_once '../../includes/config.php';

$page_title = 'เนเธเนเนเธเนเธกเน€เธ”เธฅ';
$current_page = 'models';

// Get model ID
$model_id = isset($_GET['id']) ? (int)$_GET['id'] : 0;

if (!$model_id) {
    set_message('error', 'เนเธกเนเธเธเธเนเธญเธกเธนเธฅเนเธกเน€เธ”เธฅ');
    redirect(ADMIN_URL . '/models/');
}

// Get model data
$model = get_model($conn, $model_id);
if (!$model) {
    set_message('error', 'เนเธกเนเธเธเธเนเธญเธกเธนเธฅเนเธกเน€เธ”เธฅ');
    redirect(ADMIN_URL . '/models/');
}

// Get model images
$model_images = get_model_images($conn, $model_id);

// Get categories
$categories = get_categories($conn);

$errors = [];

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Validate CSRF token
    if (!verify_csrf_token($_POST['csrf_token'] ?? '')) {
        $errors[] = 'Invalid CSRF token';
    } else {
        // Collect data
        $data = [
            'category_id' => (int)$_POST['category_id'],
            'code' => clean_input($_POST['code']),
            'name' => clean_input($_POST['name']),
            'name_en' => clean_input($_POST['name_en']),
            'description' => $_POST['description'],
            'price_min' => !empty($_POST['price_min']) ? (float)$_POST['price_min'] : null,
            'price_max' => !empty($_POST['price_max']) ? (float)$_POST['price_max'] : null,
            'height' => !empty($_POST['height']) ? (int)$_POST['height'] : null,
            'weight' => !empty($_POST['weight']) ? (int)$_POST['weight'] : null,
            'bust' => !empty($_POST['bust']) ? (int)$_POST['bust'] : null,
            'waist' => !empty($_POST['waist']) ? (int)$_POST['waist'] : null,
            'hips' => !empty($_POST['hips']) ? (int)$_POST['hips'] : null,
            'experience_years' => !empty($_POST['experience_years']) ? (int)$_POST['experience_years'] : 0,
            'age' => !empty($_POST['age']) ? (int)$_POST['age'] : null,
            'skin_tone' => clean_input($_POST['skin_tone']),
            'hair_color' => clean_input($_POST['hair_color']),
            'eye_color' => clean_input($_POST['eye_color']),
            'languages' => clean_input($_POST['languages']),
            'skills' => $_POST['skills'],
            'featured' => isset($_POST['featured']) ? 1 : 0,
            'status' => $_POST['status'],
            'sort_order' => !empty($_POST['sort_order']) ? (int)$_POST['sort_order'] : 0,
        ];
        
        // Validate
        if (empty($data['code'])) {
            $errors[] = 'เธเธฃเธธเธ“เธฒเธเธฃเธญเธเธฃเธซเธฑเธชเนเธกเน€เธ”เธฅ';
        }
        if (empty($data['name'])) {
            $errors[] = 'เธเธฃเธธเธ“เธฒเธเธฃเธญเธเธเธทเนเธญเนเธกเน€เธ”เธฅ';
        }
        
        // Check duplicate code (except current)
        if (!empty($data['code'])) {
            $stmt = $pdo->prepare("SELECT id FROM models WHERE code = ? AND id != ?");
            $stmt->execute([$data['code'], $model_id]);
            if ($stmt->fetch()) {
                $errors[] = 'เธฃเธซเธฑเธชเนเธกเน€เธ”เธฅเธเธตเนเธกเธตเธญเธขเธนเนเนเธฅเนเธง';
            }
        }
        
        // If no errors, update
        if (empty($errors)) {
            if (db_update($pdo, 'models', $data, 'id = :id', ['id' => $model_id])) {
                
                // Handle new image upload
                if (!empty($_FILES['images']['name'][0])) {
                    foreach ($_FILES['images']['name'] as $key => $name) {
                        if ($_FILES['images']['error'][$key] === UPLOAD_ERR_OK) {
                            $file = [
                                'name' => $_FILES['images']['name'][$key],
                                'type' => $_FILES['images']['type'][$key],
                                'tmp_name' => $_FILES['images']['tmp_name'][$key],
                                'error' => $_FILES['images']['error'][$key],
                                'size' => $_FILES['images']['size'][$key]
                            ];
                            
                            $upload_result = upload_image($file, 'models');
                            if ($upload_result['success']) {
                                $image_data = [
                                    'model_id' => $model_id,
                                    'image_path' => $upload_result['path'],
                                    'image_type' => 'portfolio',
                                    'is_primary' => empty($model_images) ? 1 : 0,
                                    'sort_order' => count($model_images)
                                ];
                                db_insert($pdo, 'model_images', $image_data);
                            }
                        }
                    }
                }
                
                // Log activity
                log_activity($pdo, $_SESSION['user_id'], 'update', 'models', $model_id, $model, $data);
                
                set_message('success', 'เธญเธฑเธเน€เธ”เธ—เธเนเธญเธกเธนเธฅเนเธกเน€เธ”เธฅเธชเธณเน€เธฃเนเธ');
                redirect(ADMIN_URL . '/models/edit.php?id=' . $model_id);
            } else {
                $errors[] = 'เน€เธเธดเธ”เธเนเธญเธเธดเธ”เธเธฅเธฒเธ”เนเธเธเธฒเธฃเธเธฑเธเธ—เธถเธเธเนเธญเธกเธนเธฅ';
            }
        }
    }
}

